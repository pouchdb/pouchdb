'use strict';

import {
  base64StringToBlobOrBuffer as b64StringToBluffer,
  btoa,
  readAsBinaryString,
} from 'pouchdb-binary-utils';

export default function getAttachment(docId, attachId, attachment, opts, cb) {
  const doc = opts.metadata;
  const data = doc.attachments[attachment.digest].data;

  console.log('getAttachment()', JSON.stringify({
    data_type: typeof data,
    data,
    opts,
  }));

  if (typeof data === 'string') {
    // idb_attachment_format === 'base64'
    // TODO ternary?
    //return cb(null, opts.binary ? atob(data) : data);
    console.log('callback:', cb.toString());
    if (opts.binary) {
      cb(null, b64StringToBluffer(data, attachment.content_type));
    } else {
      console.log('calling back:', data);
      cb(null, data);
    }
    return;
  }

  if (opts.binary) {
    return cb(null, data);
  } else {
    readAsBinaryString(data, function (binString) {
      cb(null, btoa(binString));
    });
  }
}
