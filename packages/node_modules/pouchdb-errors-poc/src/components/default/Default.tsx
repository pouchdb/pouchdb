import ErrorStatus from '../../shared/constants/errorStatus';
import DefaultProps, { ErrorStatusProps, ErrorResponse } from './Default.types';

const getErrorFromReason = (error: string, reason: string) => {
  function CustomPouchError(){
    // inherit error properties from our parent error manually
    // so as to allow proper JSON parsing.
    /* jshint ignore:start */
    const errorName = Object.keys(ErrorStatus) as ErrorStatusProps[];
    let getErrorDetails = errorName.find((name) => {
      return name === error;
    })
    
    return {
      reason,
      getErrorDetails
    }
  }
  
  return CustomPouchError();
}

const Error = ({ error, reason }: DefaultProps) => {
  
  function generateErrorFromResponse() {
    let err = error as ErrorResponse;
    if (typeof err !== 'object') {
      const data = err;
      err = ErrorStatus.UNKNOWN_ERROR;
      err.data = data;
    }
  
    if ('error' in err && err.error === 'conflict') {
      err.name = 'conflict';
      err.status = 409;
    }
  
    if (!('name' in err)) {
      err.name = err.error || 'unknown';
    }
  
    if (!('status' in err)) {
      err.status = 500;
    }
  
    if (!('message' in err)) {
      err.message = err.message || err.reason;
    }
  
    return err;
  }

  function createError(){
    return getErrorFromReason(error, reason)
  }
  return {
      ...ErrorStatus,
      createError,
      generateErrorFromResponse
    };
};

export default Error;
