
/**
 * Process doc._attachments as requested in opts.
 */

function processAttachments(api, metadata, doc, opts, ctx, cb) {
  if (opts.attachments && doc._attachments) {
    const attachments = doc._attachments;
    let count = Object.keys(attachments).length;
    if (count === 0) {
      return cb(null, doc);
    }
    Object.keys(attachments).forEach((key) => {
      api._getAttachment(doc._id, key, attachments[key], {
        binary: opts.binary,
        metadata: metadata,
        ctx: ctx,
      }, function (err, data) {
        const att = doc._attachments[key];
        att.data = data;
        delete att.stub;
        delete att.length;
        if (!--count) {
          cb(null, doc);
        }
      });
    });
  } else {
    if (doc._attachments) {
      for (const key in doc._attachments) {
        /* istanbul ignore else */
        if (Object.prototype.hasOwnProperty.call(doc._attachments, key)) {
          doc._attachments[key].stub = true;
        }
      }
    }
    cb(null, doc);
  }
}

export default processAttachments;
